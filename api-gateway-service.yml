spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # Auth Service
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/fallback/auth
            - StripPrefix=1

        # Usuarios Service (SIN AUTENTICACIÓN para /crear)
        - id: usuarios-service-public
          uri: lb://usuarios-service
          predicates:
            - Path=/api/usuarios/crear
          filters:
            - name: CircuitBreaker
              args:
                name: usuariosCircuitBreaker
                fallbackUri: forward:/fallback/usuarios

        # Usuarios Service (CON AUTENTICACIÓN)
        - id: usuarios-service-private
          uri: lb://usuarios-service
          predicates:
            - Path=/api/usuarios/**
          filters:
            - name: CircuitBreaker
              args:
                name: usuariosCircuitBreaker
                fallbackUri: forward:/fallback/usuarios

        # Pacientes Service
        - id: pacientes-service
          uri: lb://pacientes-service
          predicates:
            - Path=/api/pacientes/**
          filters:
            - name: CircuitBreaker
              args:
                name: pacientesCircuitBreaker
                fallbackUri: forward:/fallback/pacientes
            - StripPrefix=1

        # Doctor Service
        - id: doctor-service
          uri: lb://doctor-service
          predicates:
            - Path=/api/doctores/**
          filters:
            - name: CircuitBreaker
              args:
                name: doctorCircuitBreaker
                fallbackUri: forward:/fallback/doctor
            - StripPrefix=1
        - id: rate-limited-route
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/clinic-realm


  resilience4j:
    circuitbreaker:
      instances:
        authCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
        pacientesCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
        doctorCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
        usuariosCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
  
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus

  

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
