spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/fallback/auth
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
        - id: pacientes-service
          uri: lb://pacientes-service
          predicates:
            - Path=/pacientes/**
          filters:
            - name: CircuitBreaker
              args:
                name: pacientesCircuitBreaker
                fallbackUri: forward:/fallback/pacientes
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 25
        - id: doctor-service
          uri: lb://doctor-service
          predicates:
            - Path=/doctor/**
          filters:
            - name: CircuitBreaker
              args:
                name: doctorCircuitBreaker
                fallbackUri: forward:/fallback/doctor
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
        - id: usuarios-service
          uri: lb://usuarios-service
          predicates:
            - Path=/usuarios/**
          filters:
            - name: CircuitBreaker
              args:
                name: usuariosCircuitBreaker
                fallbackUri: forward:/fallback/usuarios
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak-server:8080/realms/clinic-realm

  resilience4j:
    circuitbreaker:
      instances:
        authCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
        pacientesCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
        doctorCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
        usuariosCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus

spring:
  cloud:
    gateway:
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            key-resolver: "#{@ipKeyResolver}"

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
